●xinetd
다른 데몬의 실행을 관장하는 슈퍼데몬
과거 슈퍼데몬으로 사용되었던 inetd를 대체하기 위해 등장
<xinetd.conf>
defaults
{
# disabled =
 log_type = SYSLOG daemon info                     --SYSLOG/FILE : 로그기록을 syslog에 위임할지, 별도 파일로 지정할지 선택 FILE /var/logs/xinet.log
 log_on_failure = HOST                             --HOST,USERID,ATTEMPT : 접속 실패시 기록될 속성값
 log_on_success = PID HOST DURATION EXIT           --PID,HOST,USERID,EXIT,DURATION,TRAFFINC : 접속 성공 시 기록될 속성값을 지정
 cps = 50 10                                       -- cps [초당 요청수 50] [제한시간(초) 10] : 초당 요청수가 50 이상이면 10초간 접속 제한
 instances = 50                                    -- instances = 50 : 동시 서비스할 수 있는 최대 개수를 지정
 per_source = 10                                   -- per_source = 10 : 같은 IP주소로 접속할 수 있는 서비스 수를 지정
 v6only = no
 groups = yes
 umask = 002
}
+
 enabled telnet ftp : 사용가능한 항목을 설정(disabled항목에서 yes라고 설정되어 있어도 허용)
 no_access : 서비스를 이용할 수 없는 원격 호스트의 주소를 지정
 access_times : 지정된 시간에만 서비스를 이용할 수 있게 함
 nice : 서버의 우선순위 지정 -20~19 사이의 정수

●logrotate.conf(/etc/logrotate.conf)
시스템에서 사용하는 로그들이 무한정 쌓이지 않도록 순환 시키는 기능을 하는 설정 파일

wtmp로그에 대해 로그파일을 압축하고 주 단위로 새로 생성하고자 할 때>
compress
/var/log/wtmp {
   weekly
   create 0664 root utmp
       minsize 1M
   rotate 1
}

●login.defs(/etc/login.defs)
각 계정의 UID,GID,패스워드 정책 등을 설정할 수 있는 config 파일

●PAM(Pluggable Authentication Module) - pam.d
리눅스 계정 관리 모듈(계정 임계값 설정)
리눅스에서 플러그인 방식으로 적용할 수 있는 인증 모듈
인증 모듈을 별도로 개발하지 않고 공유 라이브러리 형태로 적용
관리자가 인증을 중앙에서 통제
<계정관리 구성요소>
deny=n --5회 로그인 실패시 접근차단
unlock_time=n --계정잠금 후 n초후 잠금해제
no_magic_root --root로부터의 접근을 거부
reset --인증에 성공할 경우 카운트를 0으로 초기화
<동작순서>
사용자나 프로세스가 Application의 접근(access)를 요청
해당 Application의 PAM설정 파일을 확인
스택의 PAM모듈이 리스트상의 순서대로 호출
PAM모듈은 성공 또는 실패 상태를 반환(Return)
스택은 계속해서 순서대로 확인되며, 실패상태를 반환한다해서 중단되지 않음
모든 PAM모듈의 상태 결과가 종합되어 전체 인증과정의 성공 또는 실패상태를 반환

●crontab
리눅스에서 정해진 시간에 작업이 실행되도록 스케줄링하는 유틸리티 프로그램
crontab -l --현재 스케줄링 되어 있는 작업 내용 보기
crontab -u sis -e --sis계정의 crontab 편집
0 2 * * 0 rm -rf /home/* --매주 일요일 새벽2시에 rm -rf명령을 이용하여 /home디렉터리 하위 모든 파일과 디렉터리를 삭제하는 crontab스케줄


